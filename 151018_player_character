class Player_Character:
    
    def __init__(self, name = 'hero'):
        self.name = name
        self.type = ''
        self.hitpoints = 100
        self.helm = []
        self.armour = []
        self.shield = []
        self.weapon = []
        self.atk = 5
        self.dfc = 5
        self.matk = 5
        self.mdfc = 5
    
    def __str__(self):
        print(f'\n{self.name} is a {self.type} with the following attributes: \n')
        print(f'attack: {self.atk}\n')
        print(f'defense: {self.dfc}\n')
        print(f'magic attack: {self.matk}\n')
        print(f'magic defense: {self.mdfc}\n')
        print(f'total hitpoints: {self.hitpoints}\n')
    
    def char_name(self):
        
        naming = 1
        while naming == 1:
            name = input('what is the name of your character? ')
            query = 1
            while query == 1:
                confirm = input(f'is {name} the name of your character? y/n ')
                if confirm.lower() == 'n':
                    query = 0
                elif confirm.lower() == 'y':
                    self.name = name
                    naming = 0
                    query = 0
                else:
                    print('please input y or n' )
                    continue
                
    def class_select(self):
        
        char_types = {
        'warrior' : {'desc' : 'warriors are trained from a young age in the art of close-quarters combat. \nas such, these warriors have a high physical attack, but are vulnerable to magic. \nThey enter the dungeon with a sword of high quality and basic defensive armour', 'hitpoints' : 20, 'atk' : 7, 'dfc' : 0, 'matk' : -4, 'mdfc' : 0},
        'knight' : {'desc' : 'the knights day (and night) job is as  part of the royal guard. \nnot just for show, knights are equiped with a quality set of armour, and are highly resistant to physical attacks, as well as being able to shrug off their fair share of magical ones', 'hitpoints' : 50, 'atk' : 0, 'dfc' : 5, 'matk' : -4, 'mdfc' : 2},
        'mage' : {'desc' : '', 'hitpoints' : 0, 'atk' : -2, 'dfc' : -3, 'matk' : 8, 'mdfc' : 2},
        'paladin' : {'desc' : '', 'hitpoints' : 50, 'atk' : -2, 'dfc' : 2, 'matk' : 2, 'mdfc' : 5}
        }
        
        class_select = 1
        while class_select == 1:
            player_class = input('please select your starting class: warrior, knight, mage, paladin ')
            if player_class.lower() in char_types.keys:
                print(char_types[player_class.lower()]['desc'])
                query = 1
                while query == 1:
                   confirm = input(f'would you like to start the game as a {player_class.lower()}? y/n ')
                   if confirm.lower() == 'n':
                       query = 0
                       continue
                   if confirm.lower() == 'y':
                       self.type = player_class.lower()
                       self.atk += char_types[player_class.lower()]['atk']
                       self.dfc += char_types[player_class.lower()]['dfc']
                       self.matk += char_types[player_class.lower()]['matk']
                       self.mdfc += char_types[player_class.lower()]['mdfc']
                       self.hitpoints += char_types[player_class.lower()]['hitpoints']
                       class_select = 0
                       query = 0
                   else:
                       print('please input y/n')
                       continue
            else:
                print('this is an invalid selection. please check your spelling and try again')
                continue
        
        
        self.__str__()
